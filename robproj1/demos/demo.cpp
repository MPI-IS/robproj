#include <iostream>
#include <thread>
#include "signal_handler/signal_handler.hpp"
#include "robproj1/cos_signal.hpp"

// example of usage of the class robproj1/CosSignal
// which simply returns values corresponding to a
// cosinus function of the desired period.

// This is not interesting code. It is for demonstration
// purpose on how colcon/ament works.

// robproj1/CosSignal is used by code in robproj2.
// You can visit robproj2/CMakeLists.txt to see
// how libraries generated by the robproj2 project
// link to the library generated by robproj1.

// To run this demo:
// After compilation via 'colcon build', the executable
// will find itself in workspace/install/robproj1/bin.

// The robproj1 library is wrapped for python using
// pybind11. See demo.py in the same folder as this source
// file.

int main()
{

    // cos period of 2 seconds
    float period = 2.;

    // printing every 0.5 seconds
    std::chrono::nanoseconds sleep_duration(static_cast<int>(5e8));

    // for computing the cos signal
    robproj1::CosSignal cos_signal(period);

    // to be able to exit this executable with ctrl+c
    signal_handler::SignalHandler::initialize();

    std::cout << "Press Ctrl+C to send SIGINT" << std::endl;
    while (true)
    {
      
      std::cout<< cos_signal.get() << std::endl;
      std::this_thread::sleep_for(sleep_duration);
      // has_received_sigint() returns true if a SIGINT was received since
      // initialize() was called.
      if (signal_handler::SignalHandler::has_received_sigint())
        {
	  std::cout << "Received SIGINT" << std::endl;
	  break;
        }
    }

    return 0;
}
